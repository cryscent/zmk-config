/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DFL 0
#define FUN 1
#define NUM 2
#define SYM 3
#define MOU 4
#define NAV 5
#define SYS 6
#define LNG 7

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick_tap_ms=<0>;
                        flavor="tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ____ |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ____ |
// | ____ |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ____ |
// | ____ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ____ |
//                    | ESC | SPC | TAB |   | ENT | BSPC | DEL |
                        bindings = <
   &none &kp Q       &kp W      &kp E        &kp R        &kp T         &kp Y     &kp U         &kp I          &kp O        &kp P          &none
   &none &hm LCTRL A &hm LALT S &hm LGUI D   &hm LSHIFT F &lt LNG G     &lt LNG H &hm RSHIFT J  &hm RGUI K     &hm LALT L   &hm RCTRL SEMI &none
   &none &kp Z       &kp X      &kp C        &kp V        &kp B         &kp N     &kp M         &kp COMMA      &kp DOT      &kp FSLH       &none
                                &lt FUN ESC &lt NUM SPACE &lt SYM TAB   &lt MOU RET &lt NAV BSPC &lt SYS DEL
                        >;
                };

                 function_layer {
// -----------------------------------------------------------------------------------------
// | ____ |     |     |     |     |     |   |     |  F7  | F8  | F9  | F12 | ____ |
// | ____ | CTL | ALT | CMD | SFT |     |   |     |  F4  | F5  | F6  | F11 | ____ |
// | ____ |     |     |     |     |     |   |     |  F1  | F2  | F3  | F10 | ____ |
//                    | XXX |     |     |   | ENT | BSPC | DEL |
                        bindings = <
   &none &none       &none      &none        &none        &none     &none   &kp F7   &kp F8  &kp F9   &kp F12 &none
   &none &kp LCTRL   &kp LALT   &kp LGUI     &kp LSHIFT   &none     &none   &kp F4   &kp F5  &kp F6   &kp F11 &none
   &none &none       &none      &none        &none        &none     &none   &kp F1   &kp F2  &kp F3   &kp F10 &none
                                             &trans &none &none     &kp RET &kp BSPC &kp DEL
                        >;
                };

                 number_layer {
// -----------------------------------------------------------------------------------------
// | ____ |     |     |     |     |     |   |     |  7  |  8  |  9  | "   | ____ |
// | ____ | CTL | ALT | CMD | SFT |     |   |  =  |  4  |  5  |  6  | '   | ____ |
// | ____ |     |     |     |     |     |   |  +  |  1  |  2  |  3  | `   | ____ |
//                    |     | XXX |     |   |  -  |  0  |  .  |
                        bindings = <
   &none &none       &none      &none        &none        &none     &none     &kp N7   &kp N8  &kp N9   &kp DQT   &none
   &none &kp LCTRL   &kp LALT   &kp LGUI     &kp LSHIFT   &none     &kp EQUAL &kp N4   &kp N5  &kp N6   &kp SQT   &none
   &none &none       &none      &none        &none        &none     &kp PLUS  &kp N1   &kp N2  &kp N3   &kp GRAVE &none
                                             &none &trans &none     &kp MINUS &kp N0 &kp DOT
                        >;
                };
                 symbol_layer {
// -----------------------------------------------------------------------------------------
// | ____ |     |     |     |     |     |   |  (  |  &  |  *  |  ~  | )   | ____ |
// | ____ | CTL | ALT | CMD | SFT |     |   |  {  |  $  |  %  |  ^  | }   | ____ |
// | ____ |     |     |     |     |     |   |  [  |  !  |  @  |  #  | ]   | ____ |
//                    |     |     | XXX |   |  _  |  |  |  \  |
                        bindings = <
   &none &none       &none      &none        &none        &none     &kp LPAR  &kp AMPS &kp STAR  &kp TILDE &kp RPAR &none
   &none &kp LCTRL   &kp LALT   &kp LGUI     &kp LSHIFT   &none     &kp LBRC  &kp DLLR &kp PRCNT &kp CARET &kp RBRC &none
   &none &none       &none      &none        &none        &none     &kp LBKT  &kp EXCL &kp AT    &kp HASH  &kp RBKT &none
                                             &none &none  &trans    &kp UNDER &kp PIPE &kp BSLH
                        >;
                };

                // ZMK does not support mouse...
                 mouse_layer {
// -----------------------------------------------------------------------------------------
// | ____ |     | HOME|  ↑  | END | PGUP|   |     |     |     |     |     | ____ |
// | ____ |     |  ←  |  ↓  |  →  | PGDN|   |     | SFT | CMD | ALT | CTL | ____ |
// | ____ |     |     |     |     |     |   |     |     |     |     |     | ____ |
//                    |     |     |     |   | XXX |     |     |
                        bindings = <
   &none  &none  &kp HOME &kp UP   &kp END   &kp PG_UP &none  &none      &none     &none     &none      &none
   &none  &none  &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN &none  &kp RSHFT  &kp RCMD  &kp LALT  &kp RCTRL  &none
   &none  &none  &none    &none    &none     &none     &none  &none      &none     &none     &none      &none
                       &kp ESC  &kp SPACE  &kp TAB     &trans &none  &none 
                        >;
                };
                 navigation_layer {
// -----------------------------------------------------------------------------------------
// | ____ |     | HOME|  ↑  | END | PGUP|   |     |     |     |     |     | ____ |
// | ____ |     |  ←  |  ↓  |  →  | PGDN|   |     | SFT | CMD | ALT | CTL | ____ |
// | ____ |     |     |     |     |     |   |     |     |     |     |     | ____ |
//                    |     |     |     |   |     | XXX |     |
                        bindings = <
   &none  &none  &kp HOME &kp UP   &kp END   &kp PG_UP &none  &none      &none     &none     &none      &none
   &none  &none  &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN &none  &kp RSHFT  &kp RCMD  &kp LALT  &kp RCTRL  &none
   &none  &none  &none    &none    &none     &none     &none  &none      &none     &none     &none      &none
                       &kp ESC  &kp SPACE  &kp TAB     &none &trans &none 
                        >;
                };
                 system_layer {
// -----------------------------------------------------------------------------------------
// | ____ | BRUP| REND| PASE| FF  | VLUP|   |     |     |     |     |     | ____ |
// | ____ | BRDN| PREV| PLAY| NEXT| VLDN|   |     | SFT | CMD | ALT | CTL | ____ |
// | ____ | BRAT|BTCLR|BTOFF| BTON| MUTE|   |     |     |     |     |     | ____ |
//                    | BT0 | BT1 | BT2 |   |     |     | XXX |
                        bindings = <
   &none  &kp C_BRI_UP   &kp C_RW   &kp C_PAUSE  &kp C_FF     &kp C_VOL_UP     &none  &none      &none     &none     &none      &none
   &none  &kp C_BRI_DN   &kp C_PREV &kp C_PP     &kp C_NEXT   &kp C_VOL_DN     &none  &kp RSHFT  &kp RCMD  &kp LALT  &kp RCTRL  &none
   &none  &kp C_BRI_AUTO &bt BT_CLR &out OUT_USB &out OUT_BLE &kp C_MUTE       &none  &none      &none     &none     &none      &none
                                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2        &none &none &trans 
                        >;
                };

                long_layer {
// -----------------------------------------------------------------------------------------
// | ____ |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ____ |
// | ____ |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ____ |
// | ____ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ____ |
//                    | ESC | SPC | TAB |   | ENT | BSPC | DEL |
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T     &kp Y &kp U  &kp I     &kp O   &kp P    &none
   &none &kp A &kp S &kp D &kp F &kp G     &kp H &kp J  &kp K     &kp L   &kp SEMI &none
   &none &kp Z &kp X &kp C &kp V &kp B     &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
             &kp ESC &kp SPACE &kp TAB     &kp RET &kp BSPC &kp DEL
                        >;
                };

        };
};
